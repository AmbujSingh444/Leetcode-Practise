SQL practice Question:

1.Select command: 

 What is the SELECT Command in SQL?
The SELECT command is used in SQL to retrieve data from one or more tables in a database. It's the most commonly used command and forms the basis for querying data.

 Basic Syntax:
SELECT column1, column2, ...
FROM table_name;
    • SELECT: Specifies the columns you want to fetch.
    • FROM: Indicates the table from which to retrieve the data.

Examples of SELECT

1. Select All Columns
SELECT * FROM employees;
This selects all columns from the employees table.

2. Select Specific Columns
SELECT first_name, last_name FROM employees;
This selects only the first_name and last_name columns from the employees table.

3. Using WHERE Clause to Filter Data
SELECT * FROM employees
WHERE department = 'Sales';
 This returns only employees working in the Sales department.

4. Using ORDER BY to Sort Results
SELECT * FROM employees
ORDER BY salary DESC;
 This returns all employees sorted by salary in descending order.

5. Using Aliases (AS) for Better Readability
SELECT first_name AS "First Name", last_name AS "Last Name"
FROM employees;
 This will display column headers as “First Name” and “Last Name”.

6. Using DISTINCT to Remove Duplicates
SELECT DISTINCT department FROM employees;
This will return a list of unique departments.

7. Limiting the Number of Results
SELECT * FROM employees
LIMIT 5;
This returns only the first 5 records from the table.

 Summary:
Clause
Purpose
SELECT
Specifies which columns to return
FROM
Specifies the table to query
WHERE
Filters records based on conditions
ORDER BY
Sorts results
LIMIT
Limits number of rows returned
DISTINCT
Removes duplicate values
AS
Gives a temporary name (alias) to columns

*****************************************************************************


LeetCode Problems:

1. Recycleable and Low fat products

code :
# Write your MySQL query statement below
select product_id -- selecting product id column 
from Products -- Products is table name
where low_fats = 'Y' AND recyclable = 'Y'; -- using and since we need both.


Products =
| product_id | low_fats | recyclable | | ---------- | -------- | ---------- | | 0 | Y | N | | 1 | Y | Y | | 2 | N | Y | | 3 | Y | Y | | 4 | N | N |
Output
| product_id | | ---------- | | 1 | | 3 |
Expected
| product_id | | ---------- | | 1 | | 3 |




2. Find Customer Refree

code : 
# Write your MySQL query statement below
select name
from Customer
WHERE referee_id != 2 or referee_id is null ;/*since we need to select id who don't have any value ie null so we need to include that as well*/

Output:
Customer =
| id | name | referee_id | | -- | ---- | ---------- | | 1 | Will | null | | 2 | Jane | null | | 3 | Alex | 2 | | 4 | Bill | null | | 5 | Zack | 1 | | 6 | Mark | 2 |
Output
| name | | ---- | | Will | | Jane | | Bill | | Zack |
Expected
| name | | ---- | | Will | | Jane | | Bill | | Zack |


3. Big Countries

code:
# Write your MySQL query statement below
SELECT name,population,area
FROM world
WHERE area >= 3000000 or population >= 25000000;


Output:
World =
| name | continent | area | population | gdp | | ----------- | --------- | ------- | ---------- | ------------ | | Afghanistan | Asia | 652230 | 25500100 | 20343000000 | | Albania | Europe | 28748 | 2831741 | 12960000000 | | Algeria | Africa | 2381741 | 37100000 | 188681000000 | | Andorra | Europe | 468 | 78115 | 3712000000 | | Angola | Africa | 1246700 | 20609294 | 100990000000 |
Output
| name | population | area | | ----------- | ---------- | ------- | | Afghanistan | 25500100 | 652230 | | Algeria | 37100000 | 2381741 |
Expected
| name | population | area | | ----------- | ---------- | ------- | | Afghanistan | 25500100 | 652230 | | Algeria | 37100000 | 2381741 |


4. Article Views

code:
# Write your MySQL query statement below
SELECT author_id as id #since we need output as id so we rename it
FROM views
WHERE author_id = viewer_id #match the condition
group by author_id # since there are multiple values so we group by them to one
order by author_id; #we need output in ascending order 


Output:

Views =
| article_id | author_id | viewer_id | view_date | | ---------- | --------- | --------- | ---------- | | 1 | 3 | 5 | 2019-08-01 | | 1 | 3 | 6 | 2019-08-02 | | 2 | 7 | 7 | 2019-08-01 | | 2 | 7 | 6 | 2019-08-02 | | 4 | 7 | 1 | 2019-07-22 | | 3 | 4 | 4 | 2019-07-21 | 
View more
Output
| id | | -- | | 4 | | 7 |
Expected
| id | | -- | | 4 | | 7 |


5. Invalid Tweets

code:
# Write your MySQL query statement below
SELECT tweet_id
FROM tweets 
WHERE length(content)>15; # we use length to check tweet greater than 15.


Output:
Tweets =
| tweet_id | content | | -------- | --------------------------------- | | 1 | Let us Code | | 2 | More than fifteen chars are here! |
Output
| tweet_id | | -------- | | 2 |
Expected
| tweet_id | | -------- | | 2 |
